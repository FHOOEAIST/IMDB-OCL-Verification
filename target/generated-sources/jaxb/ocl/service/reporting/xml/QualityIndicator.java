//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.09.27 at 12:37:59 PM CEST 
//


package ocl.service.reporting.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for QualityIndicator.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="QualityIndicator"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Diagnostics"/&gt;
 *     &lt;enumeration value="Invalid - dangling references"/&gt;
 *     &lt;enumeration value="Invalid - inconsistent data"/&gt;
 *     &lt;enumeration value="Invalid - preconditions PF"/&gt;
 *     &lt;enumeration value="Plausible"/&gt;
 *     &lt;enumeration value="Processible"/&gt;
 *     &lt;enumeration value="Rejected - File cannot be parsed"/&gt;
 *     &lt;enumeration value="Rejected - Invalid CGMES file"/&gt;
 *     &lt;enumeration value="Rejected - Invalid file name"/&gt;
 *     &lt;enumeration value="Rejected - Invalid file type"/&gt;
 *     &lt;enumeration value="Rejected - OCL rule violation(s)"/&gt;
 *     &lt;enumeration value="Substituted"/&gt;
 *     &lt;enumeration value="Unavailable"/&gt;
 *     &lt;enumeration value="Unlikely"/&gt;
 *     &lt;enumeration value="Valid"/&gt;
 *     &lt;enumeration value="Warning - non fatal inconsistencies"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "QualityIndicator")
@XmlEnum
public enum QualityIndicator {

    @XmlEnumValue("Diagnostics")
    DIAGNOSTICS("Diagnostics"),
    @XmlEnumValue("Invalid - dangling references")
    INVALID_DANGLING_REFERENCES("Invalid - dangling references"),
    @XmlEnumValue("Invalid - inconsistent data")
    INVALID_INCONSISTENT_DATA("Invalid - inconsistent data"),
    @XmlEnumValue("Invalid - preconditions PF")
    INVALID_PRECONDITIONS_PF("Invalid - preconditions PF"),
    @XmlEnumValue("Plausible")
    PLAUSIBLE("Plausible"),
    @XmlEnumValue("Processible")
    PROCESSIBLE("Processible"),
    @XmlEnumValue("Rejected - File cannot be parsed")
    REJECTED_FILE_CANNOT_BE_PARSED("Rejected - File cannot be parsed"),
    @XmlEnumValue("Rejected - Invalid CGMES file")
    REJECTED_INVALID_CGMES_FILE("Rejected - Invalid CGMES file"),
    @XmlEnumValue("Rejected - Invalid file name")
    REJECTED_INVALID_FILE_NAME("Rejected - Invalid file name"),
    @XmlEnumValue("Rejected - Invalid file type")
    REJECTED_INVALID_FILE_TYPE("Rejected - Invalid file type"),
    @XmlEnumValue("Rejected - OCL rule violation(s)")
    REJECTED_OCL_RULE_VIOLATION_S("Rejected - OCL rule violation(s)"),
    @XmlEnumValue("Substituted")
    SUBSTITUTED("Substituted"),
    @XmlEnumValue("Unavailable")
    UNAVAILABLE("Unavailable"),
    @XmlEnumValue("Unlikely")
    UNLIKELY("Unlikely"),
    @XmlEnumValue("Valid")
    VALID("Valid"),
    @XmlEnumValue("Warning - non fatal inconsistencies")
    WARNING_NON_FATAL_INCONSISTENCIES("Warning - non fatal inconsistencies");
    private final String value;

    QualityIndicator(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static QualityIndicator fromValue(String v) {
        for (QualityIndicator c: QualityIndicator.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
